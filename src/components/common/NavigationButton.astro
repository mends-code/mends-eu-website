---
interface Props {
	svgClasses?: string; // Added to define `og:url` and `twitter:url` dynamically
}
const { svgClasses } = Astro.props; // Default to empty string if no classes are provided
---

<button
  class="block p-3 md:p-6 mt-auto peer nav-button"
  @click="showNav = !showNav"
  x-cloak
>
  <!--?xml version="1.0" encoding="UTF-8"?-->
  <svg
    class=`${svgClasses}`
    id="uuid-505c508a-26d7-4da0-8eab-29c714423060"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 262 262"
    width="100%"
    height="100%"
  >
    <defs>
      <linearGradient
        id="rhinoToPaleLeafBottom"
        x1="0%"
        y1="0%"
        x2="0%"
        y2="100%"
      >
        <stop offset="0%" stop-color="#39435E">
          <animate
            attributeName="stop-color"
            values="#39435E; #38668D; #6AA2BC; #38668D; #39435E"
            dur="12s"
            repeatCount="indefinite"></animate>
        </stop>
        <stop offset="100%" stop-color="#38668D">
          <animate
            attributeName="stop-color"
            values="#38668D; #6AA2BC; #C5D9BC; #6AA2BC; #38668D"
            dur="12s"
            repeatCount="indefinite"></animate>
        </stop>
      </linearGradient>
    </defs>

    <rect
      fill="url(#rhinoToPaleLeafBottom)"
      x="0"
      y="0"
      width="262"
      height="62"
      rx="30.99997"
      ry="30.99997"></rect><rect
      fill="url(#rhinoToPaleLeafBottom)"
      x="0"
      y="100"
      width="262"
      height="62"
      rx="30.14894"
      ry="30.14894"></rect><rect
      fill="url(#rhinoToPaleLeafBottom)"
      x="0"
      y="200"
      width="262"
      height="62"
      rx="30.99997"
      ry="30.99997"></rect></svg
  ></button
>
